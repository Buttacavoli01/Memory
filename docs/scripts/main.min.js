let cards=[...$(".card")],moves=0,match=$("matched"),matched=0;function startGame(){let a=function(a){let e,t,d=a.length;for(;0!==d;)t=Math.floor(Math.random()*d),e=a[d-=1],a[d]=a[t],a[t]=e;return startTimer(),a}(cards);for(let e=0;e<a.length;e++)[].forEach.call(cards,a=>{$("#card-deck").append(a)})}function startTimer(){let a=0,e=0;setInterval(()=>{$(".timer").html(` ${e} : ${a}`),60===++a&&(e++,a=0)},1e3)}function displayCard(){$(this).addClass("open show disabled")}function cardFlipped(){oC.push(this),2===oC.length&&(moves++,$(".move-counter").text(moves),oC[0].type===oC[1].type?(oC[0].classList.add("match","disabled"),oC[1].classList.add("match","disabled"),matched+=2,oC=[]):(oC[0].classList.add("unmatched"),oC[1].classList.add("unmatched"),disabled(),setTimeout(()=>{oC[0].classList.remove("open","show","no-event","unmatched"),oC[1].classList.remove("open","show","no-event","unmatched"),enable(),oC=[]},800)))}function disabled(){Array.prototype.filter.call(cards,()=>{$(".card").addClass("disabled")})}function enable(){Array.prototype.filter.call(cards,()=>{$(".card").removeClass("disabled");for(let a=0;a<match.length;a++)match[a].classList.add("disabled")})}function endGame(){16===matched&&($(".overlay").css("visibility","visible"),$("#finalMove").html(moves),$("#starRating").html(starRating),$("#totalTime").html())}function closeModal(){$("popup").click(()=>{$("overlay").css("visibility","hidden")})}oC=[],$(".card").click(displayCard),$(".card").click(cardFlipped),$(".card").click(endGame),$(document).ready(startGame);